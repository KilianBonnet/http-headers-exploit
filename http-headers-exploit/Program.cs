using System.Net;
using System.Text.Json;

namespace http_headers_exploit;

public class Program
{
    static async Task Main(string[] args)
    {
        ExploitClient exploitClient = new ExploitClient();
        var listener = new HttpListener();
        listener.Prefixes.Add("http://localhost:8080/");
        listener.Start();

        Console.WriteLine("Server started at http://localhost:8080/");

        while (true)
        {
            var context = await listener.GetContextAsync();
            context.Response.Headers.Add("Access-Control-Allow-Origin", "*");
            var request = context.Request;
            var response = context.Response;

            if (request.HttpMethod == "GET" && request.Url.AbsolutePath == "/popularity")
            {
                string websitesJson = File.ReadAllText("./website_data/popularity_websites.json");
                Statistics globalStatistics = await exploitClient.RequestLoopAsync(websitesJson);
                List<ServerStatistic> serverStatistics = globalStatistics.GetServerPopularity();
                string serverStatisticJson = JsonSerializer.Serialize(serverStatistics);
                ReplyAsJson(response, serverStatisticJson);
            }

            else if (request.HttpMethod == "GET" && request.Url.AbsolutePath == "/age")
            {
                string websitesJson = File.ReadAllText("./website_data/age_websites.json");
                Statistics globalStatistics = await exploitClient.RequestLoopAsync(websitesJson);
                AgeStatistic ageStatistic = new AgeStatistic(
                    globalStatistics.GetPageAverageAge(),
                    globalStatistics.GetPageStandardDeviation()
                );
                string ageStatisticJson = JsonSerializer.Serialize(ageStatistic);
                ReplyAsJson(response, ageStatisticJson);
            }

            else if (request.HttpMethod == "GET" && request.Url.AbsolutePath == "/other")
            {
                string websitesJson = File.ReadAllText("./website_data/popularity_websites.json");
                Statistics globalStatistics = await exploitClient.RequestLoopAsync(websitesJson);
                OtherStatistic otherStatistic = new OtherStatistic(
                    globalStatistics.GetTimeOutRate(),
                    globalStatistics.GetStatueCodeStatistics(),
                    globalStatistics.GetCookieAverageAge()
                );
                string ageStatisticJson = JsonSerializer.Serialize(otherStatistic);
                ReplyAsJson(response, ageStatisticJson);
            }

            else
            {
                response.StatusCode = 404;
                response.Close();
            }
        }
    }

    private static void ReplyAsJson(HttpListenerResponse response, string json) {
        byte[] buffer = System.Text.Encoding.UTF8.GetBytes(json);
        response.ContentLength64 = buffer.Length;
        response.StatusCode = 200;
        response.OutputStream.Write(buffer, 0, buffer.Length);
    }
}
